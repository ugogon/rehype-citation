{"version":3,"file":"generator.mjs","sources":["../../src/regex.js","../../src/parse-citation.js","../../src/utils.js","../../src/html-transform-node.js","../../src/gen-citation.js","../../src/gen-biblio.js","../../src/gen-footnote.js","../../src/generator.js"],"sourcesContent":["// Regex adapted from https://github.com/Zettlr/Zettlr/blob/develop/source/common/util/extract-citations.ts\n\n/**\n * Citation detection: The first alternative matches \"full\" citations surrounded\n * by square brackets, whereas the second one matches in-text citations,\n * optionally with suffixes.\n *\n * * Group 1 matches regular \"full\" citations\n * * Group 2 matches in-text citations (not surrounded by brackets)\n * * Group 3 matches optional square-brackets suffixes to group 2 matches\n *\n * For more information, see https://pandoc.org/MANUAL.html#extension-citations\n *\n * @var {RegExp}\n */\nexport const citationRE =\n  /(?:\\[([^[\\]]*@[^[\\]]+)\\])|(?<=\\s|^|(-))(?:@([\\p{L}\\d_][^\\s]*[\\p{L}\\d_]|\\{.+\\})(?:\\s+\\[(.*?)\\])?)/u\n\n/**\n * I hate everything at this. This can match every single possible variation on\n * whatever the f*** you can possibly do within square brackets according to the\n * documentation. I opted for named groups for these because otherwise I have no\n * idea what I have been doing here.\n *\n * * Group prefix: Contains the prefix, ends with a dash if we should suppress the author\n * * Group citekey: Contains the actual citekey, can be surrounded in curly brackets\n * * Group explicitLocator: Contains an explicit locator statement. If given, we MUST ignore any form of locator in the suffix\n * * Group explicitLocatorInSuffix: Same as above, but not concatenated to the citekey\n * * Group suffix: Contains the suffix, but may start with a locator (if explicitLocator and explicitLocatorInSuffix are not given)\n *\n * @var {RegExp}\n */\nexport const fullCitationRE =\n  /(?<prefix>.+)?(?:@(?<citekey>[\\p{L}\\d_][^\\s{]*[\\p{L}\\d_]|\\{.+\\}))(?:\\{(?<explicitLocator>.*)\\})?(?:,\\s+(?:\\{(?<explicitLocatorInSuffix>.*)\\})?(?<suffix>.*))?/u\n\n/**\n * This regular expression matches locator ranges, like the following:\n *\n * * 23-45, and further (here it matches up to, not including the comma)\n * * 45\n * * 15423\n * * 14235-12532\n * * 12-34, 23, 56\n * * 12, 23-14, 23\n * * 12, 54, 12-23\n * * 1, 1-4\n * * 3\n * * NEW NEW NEW: Now also matches Roman numerals as sometimes used in forewords!\n *\n * @var {RegExp}\n */\nexport const locatorRE = /^(?:[\\d, -]*\\d|[ivxlcdm, -]*[ivxlcdm])/i\n","/**\n * @typedef {import('./types').CiteItem} CiteItem\n * @typedef {import('./types').CiteItemSuffix} CiteItemSuffix\n */\n\nimport { fullCitationRE, locatorRE } from './regex.js'\n\n/**\n * The locatorLabels have been sourced from the Citr library. Basically it's just\n * a map with valid CSL locator labels and an array of possible natural labels\n * which a user might want to write (instead of the standardized labels).\n *\n * @var {{ [key: string]: string[] }}}\n */\nconst locatorLabels = {\n  book: ['Buch', 'Bücher', 'B.', 'book', 'books', 'bk.', 'bks.', 'livre', 'livres', 'liv.'],\n  chapter: ['Kapitel', 'Kap.', 'chapter', 'chapters', 'chap.', 'chaps', 'chapitre', 'chapitres'],\n  column: ['Spalte', 'Spalten', 'Sp.', 'column', 'columns', 'col.', 'cols', 'colonne', 'colonnes'],\n  figure: ['Abbildung', 'Abbildungen', 'Abb.', 'figure', 'figures', 'fig.', 'figs'],\n  folio: ['Blatt', 'Blätter', 'Fol.', 'folio', 'folios', 'fol.', 'fols', 'fᵒ', 'fᵒˢ'],\n  issue: [\n    'Nummer',\n    'Nummern',\n    'Nr.',\n    'number',\n    'numbers',\n    'no.',\n    'nos.',\n    'numéro',\n    'numéros',\n    'nᵒ',\n    'nᵒˢ',\n  ],\n  line: ['Zeile', 'Zeilen', 'Z', 'line', 'lines', 'l.', 'll.', 'ligne', 'lignes'],\n  note: ['Note', 'Noten', 'N.', 'note', 'notes', 'n.', 'nn.'],\n  opus: ['Opus', 'Opera', 'op.', 'opus', 'opera', 'opp.'],\n  page: ['Seite', 'Seiten', 'S.', 'page', 'pages', 'p.', 'pp.'],\n  paragraph: [\n    'Absatz',\n    'Absätze',\n    'Abs.',\n    '¶',\n    '¶¶',\n    'paragraph',\n    'paragraphs',\n    'para.',\n    'paras',\n    'paragraphe',\n    'paragraphes',\n    'paragr.',\n  ],\n  part: ['Teil', 'Teile', 'part', 'parts', 'pt.', 'pts', 'partie', 'parties', 'part.'],\n  section: [\n    'Abschnitt',\n    'Abschnitte',\n    'Abschn.',\n    '§',\n    '§§',\n    'section',\n    'sections',\n    'sec.',\n    'secs',\n    'sect.',\n  ],\n  'sub verbo': ['sub verbo', 'sub verbis', 's.&#160;v.', 's.&#160;vv.', 's.v.', 's.vv.'],\n  verse: ['Vers', 'Verse', 'V.', 'verse', 'verses', 'v.', 'vv.', 'verset', 'versets'],\n  volume: ['Band', 'Bände', 'Bd.', 'Bde.', 'volume', 'volumes', 'vol.', 'vols.'],\n}\n\n/**\n * Parses a given citation string and return entries and isComposite flag required for cite-proc.\n * Adapted from https://github.com/Zettlr/Zettlr/blob/develop/source/common/util/extract-citations.ts\n *\n * @param {RegExpMatchArray} regexMatch Cite string in the form of '[@item]' or '@item'\n * @return {[CiteItem[], boolean]} [entries, isComposite]\n */\nexport const parseCitation = (regexMatch) => {\n  /** @type {CiteItem[]} */\n  let entries = []\n  let isComposite = false\n  const fullCitation = regexMatch[1]\n  const inTextSuppressAuthor = regexMatch[2]\n  const inTextCitation = regexMatch[3]\n  const optionalSuffix = regexMatch[4]\n\n  if (fullCitation !== undefined) {\n    // Handle citations in the form of [@item1; @item2]\n    for (const citationPart of fullCitation.split(';')) {\n      const match = fullCitationRE.exec(citationPart.trim())\n      if (match === null) {\n        continue // Faulty citation\n      }\n      // Prefix is the portion before @ e.g. [see @item1] or an empty string\n      // We explicitly cast groups since we have groups in our RegExp and as\n      // such the groups object will be set.\n      /** @type {CiteItem} */\n      const thisCitation = {\n        id: match.groups.citekey.replace(/{(.+)}/, '$1'),\n        prefix: undefined,\n        locator: undefined,\n        label: 'page',\n        'suppress-author': false,\n        suffix: undefined,\n      }\n\n      // First, deal with the prefix. The speciality here is that it can\n      // indicate if we should suppress the author.\n      const rawPrefix = match.groups.prefix\n      if (rawPrefix !== undefined) {\n        thisCitation['suppress-author'] = rawPrefix.trim().endsWith('-')\n        if (thisCitation['suppress-author']) {\n          thisCitation.prefix = rawPrefix.substring(0, rawPrefix.trim().length - 1).trim()\n        } else {\n          thisCitation.prefix = rawPrefix.trim()\n        }\n      }\n\n      // Second, deal with the suffix. This one can be much more tricky than\n      // the prefix. We have three alternatives where the locator may be\n      // present: If we have an explicitLocator or an explicitLocatorInSuffix,\n      // we should extract the locator from there and leave the actual suffix\n      // untouched. Only if those two alternatives are not present, then we\n      // have a look at the rawSuffix and extract a (potential) locator.\n      const explicitLocator = match.groups.explicitLocator\n      const explicitLocatorInSuffix = match.groups.explicitLocatorInSuffix\n      const rawSuffix = match.groups.suffix\n\n      let suffixToParse\n      let containsLocator = true\n      if (explicitLocator === undefined && explicitLocatorInSuffix === undefined) {\n        // Potential locator in rawSuffix. Only in this case should we overwrite\n        // the suffix (hence the same if-condition below)\n        suffixToParse = rawSuffix\n        containsLocator = false\n      } else if (explicitLocatorInSuffix !== undefined || explicitLocator !== undefined) {\n        suffixToParse = explicitLocator !== undefined ? explicitLocator : explicitLocatorInSuffix\n        thisCitation.suffix = rawSuffix?.trim()\n      }\n\n      const { label, locator, suffix } = parseSuffix(suffixToParse, containsLocator)\n      thisCitation.locator = locator\n\n      if (label !== undefined) {\n        thisCitation.label = label\n      }\n\n      if (explicitLocator === undefined && explicitLocatorInSuffix === undefined) {\n        thisCitation.suffix = suffix\n      } else if (suffix !== undefined && thisCitation.locator !== undefined) {\n        // If we're here, we should not change the suffix, but parseSuffix may\n        // have put something into the suffix return. If we're here, that will\n        // definitely be a part of the locator.\n        thisCitation.locator += suffix\n      }\n\n      entries.push(thisCitation)\n    }\n  } else {\n    // We have an in-text citation, so we can take a shortcut\n    isComposite = true\n    entries.push({\n      prefix: undefined,\n      id: inTextCitation.replace(/{(.+)}/, '$1'),\n      'suppress-author': inTextSuppressAuthor !== undefined,\n      ...parseSuffix(optionalSuffix, false), // Populate more depending on the suffix\n    })\n  }\n  return [entries, isComposite]\n}\n\n/**\n * This takes a suffix and extracts optional label and locator from this. Pass\n * true for the containsLocator property to indicate to this function that what\n * it got was not a regular suffix with an optional locator, but an explicit\n * locator so it knows it just needs to look for an optional label.\n *\n * @param {string} suffix           The suffix to parse\n * @param {boolean} containsLocator  If true, forces parseSuffix to return a locator\n *\n * @return {CiteItemSuffix} An object containing three optional properties locator, label, or suffix.\n */\nfunction parseSuffix(suffix, containsLocator) {\n  /** @type {CiteItemSuffix} */\n  const retValue = {\n    locator: undefined,\n    label: 'page',\n    suffix: undefined,\n  }\n\n  if (suffix === undefined) {\n    return retValue\n  }\n\n  // Make sure the suffix does not start or end with spaces\n  suffix = suffix.trim()\n\n  // If there is a label, the suffix must start with it\n  for (const label in locatorLabels) {\n    for (const natural of locatorLabels[label]) {\n      if (suffix.toLowerCase().startsWith(natural.toLowerCase())) {\n        retValue.label = label\n        if (containsLocator) {\n          // The suffix actually is the full locator, we just had to extract\n          // the label from it. There is no remaining suffix.\n          retValue.locator = suffix.substr(natural.length).trim()\n        } else {\n          // The caller indicated that this is a regular suffix, so we must also\n          // extract the locator from what is left after label extraction.\n          retValue.suffix = suffix.substr(natural.length).trim()\n          const match = locatorRE.exec(retValue.suffix)\n          if (match !== null) {\n            retValue.locator = match[0] // Extract the full match\n            retValue.suffix = retValue.suffix.substr(match[0].length).trim()\n          }\n        }\n\n        return retValue // Early exit\n      }\n    }\n  }\n\n  // If we're here, there was no explicit label given, but the caller has indicated\n  // that this suffix MUST contain a locator. This means that the whole suffix is\n  // the locator.\n  if (containsLocator) {\n    retValue.locator = suffix\n  } else {\n    // The caller has not indicated that the whole suffix is the locator, so it\n    // can be at the beginning. We only accept simple page/number ranges here.\n    // For everything, the user should please be more specific.\n    const match = locatorRE.exec(suffix)\n    if (match !== null) {\n      retValue.locator = match[0] // Full match is the locator\n      retValue.suffix = suffix.substr(match[0].length).trim() // The rest is the suffix.\n    }\n  }\n\n  return retValue\n}\n","import fetch from 'cross-fetch'\n\nexport const isNode = typeof window === 'undefined'\n\nexport const readFile = async (path) => {\n  if (isValidHttpUrl(path)) {\n    return fetch(path)\n      .then((response) => response.text())\n      .then((data) => data)\n  } else {\n    if (isNode) {\n      return import('fs').then((fs) => fs.readFileSync(path, 'utf8'))\n    } else {\n      throw new Error(`Cannot read non valid URL in node env.`)\n    }\n  }\n}\n\n/**\n * Check if valid URL\n * https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url\n *\n * @param {string} str\n * @return {boolean}\n */\nexport const isValidHttpUrl = (str) => {\n  let url\n\n  try {\n    url = new URL(str)\n  } catch (_) {\n    return false\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:'\n}\n\n/**\n * Get bibliography by merging options and vfile data\n *\n * @param {import('./generator.js').Options} options\n * @param {import('vfile').VFile} file\n */\nexport const getBibliography = async (options, file) => {\n  let bibliography = ''\n  if (options.bibliography) {\n    bibliography = options.bibliography\n    // @ts-ignore\n  } else if (file?.data?.frontmatter?.bibliography) {\n    // @ts-ignore\n    bibliography = file.data.frontmatter.bibliography\n    // If local path, get absolute path\n    if (!isValidHttpUrl(bibliography)) {\n      if (isNode) {\n        bibliography = await import('path').then((path) =>\n          path.join(options.path || file.cwd, bibliography)\n        )\n      } else {\n        throw new Error(`Cannot read non valid bibliography URL in node env.`)\n      }\n    }\n  }\n\n  return bibliography\n}\n\n/**\n * Load CSL - supports predefined name from config.templates.data or http, file path (nodejs)\n *\n * @param {*} Cite cite object from citation-js\n * @param {string} format CSL name e.g. apa or file path to CSL file\n * @param {string} root optional root path\n */\nexport const loadCSL = async (Cite, format, root = '') => {\n  const config = Cite.plugins.config.get('@csl')\n  if (!Object.keys(config.templates.data).includes(format)) {\n    const cslName = `customCSL-${Math.random().toString(36).slice(2, 7)}`\n    let cslPath = ''\n    if (isValidHttpUrl(format)) cslPath = format\n    else {\n      if (isNode) cslPath = await import('path').then((path) => path.join(root, format))\n    }\n    try {\n      config.templates.add(cslName, await readFile(cslPath))\n    } catch (err) {\n      throw new Error(`Input CSL option, ${format}, is invalid or is an unknown file.`)\n    }\n    return cslName\n  } else {\n    return format\n  }\n}\n\n/**\n * Load locale - supports predefined name from config.locales.data or http, file path (nodejs)\n *\n * @param {*} Cite cite object from citation-js\n * @param {string} format locale name\n * @param {string} root optional root path\n */\nexport const loadLocale = async (Cite, format, root = '') => {\n  const config = Cite.plugins.config.get('@csl')\n  if (!Object.keys(config.locales.data).includes(format)) {\n    let localePath = ''\n    if (isValidHttpUrl(format)) localePath = format\n    else {\n      if (isNode) localePath = await import('path').then((path) => path.join(root, format))\n    }\n    try {\n      const file = await readFile(localePath)\n      const xmlLangRe = /xml:lang=\"(.+)\"/\n      const localeName = file.match(xmlLangRe)[1]\n      config.locales.add(localeName, file)\n      return localeName\n    } catch (err) {\n      throw new Error(`Input locale option, ${format}, is invalid or is an unknown file.`)\n    }\n  } else {\n    return format\n  }\n}\n\n/**\n * Get citation format\n *\n * @param {*} citeproc citeproc\n * @returns string\n */\nexport const getCitationFormat = (citeproc) => {\n  const info = citeproc.cslXml.dataObj.children[0]\n  const node = info.children.find((x) => x['attrs'] && x['attrs']['citation-format'])\n  // citation-format takes 5 possible values\n  // https://docs.citationstyles.org/en/stable/specification.html#toc-entry-14\n  /** @type {'author-date' | 'author' | 'numeric' | 'note' | 'label'} */\n  const citationFormat = node['attrs']['citation-format']\n  return citationFormat\n}\n\n/**\n * Get registry objects that matches a list of relevantIds\n * If sorted is false, retrieve registry item in the order of the given relevantIds\n *\n * @param {*} citeproc citeproc\n * @param {string[]} relevantIds\n * @param {boolean} sorted\n * @return {*} registry objects that matches Ids, in the correct order\n */\nexport const getSortedRelevantRegistryItems = (citeproc, relevantIds, sorted) => {\n  const res = []\n  if (sorted) {\n    // If sorted follow registry order\n    for (const item of citeproc.registry.reflist) {\n      if (relevantIds.includes(item.id)) res.push(item)\n    }\n  } else {\n    // Otherwise follow the relevantIds\n    for (const id of relevantIds) {\n      res.push(citeproc.registry.reflist.find((x) => x.id === id))\n    }\n  }\n  return res\n}\n\n/**\n * Split a string into two parts based on a given index position\n *\n * @param {string} str\n * @param {number} index\n * @return {string[]}\n */\nexport const split = (str, index) => {\n  return [str.slice(0, index), str.slice(index)]\n}\n\n/**\n * Check if two registry objects belong to the same author\n * Currently only checks on family name\n *\n * @param {*} item registry object\n * @param {*} item2 registry object\n * @return {boolean}\n */\nexport const isSameAuthor = (item, item2) => {\n  const authorList = item.ref.author\n  const authorList2 = item2.ref.author\n  if (authorList.length !== authorList2.length) return false\n  for (let i = 0; i < authorList.length; i++) {\n    if (authorList[i].family !== authorList2[i].family) return false\n  }\n  return true\n}\n","import parse5 from 'parse5'\nimport { fromParse5 } from 'hast-util-from-parse5'\n\n/**\n * Convert HTML to HAST node\n *\n * @param {string} html\n */\nexport const htmlToHast = (html) => {\n  const p5ast = parse5.parseFragment(html)\n  return fromParse5(p5ast).children[0]\n}\n","/**\n * @typedef {import('./types').CiteItem} CiteItem\n * @typedef {import('./types').Mode} Mode\n * @typedef {import('./types').Options} Options\n */\n\nimport { getSortedRelevantRegistryItems, split, isSameAuthor } from './utils.js'\nimport { htmlToHast } from './html-transform-node.js'\n\n/**\n * Generate citation using citeproc\n * This accounts for prev citations and additional properties\n *\n * @param {*} citeproc\n * @param {Mode} mode\n * @param {CiteItem[]} entries\n * @param {string} citationIdRoot\n * @param {number} citationId\n * @param {any[]} citationPre\n * @param {Options} options\n * @param {boolean} isComposite\n * @param {import('./types').CitationFormat} citationFormat\n * @return {[string, string]}\n */\nexport const genCitation = (\n  citeproc,\n  mode,\n  entries,\n  citationIdRoot,\n  citationId,\n  citationPre,\n  options,\n  isComposite,\n  citationFormat\n) => {\n  const { inlineClass, linkCitations } = options\n  const key = `${citationIdRoot}-${citationId}`\n  const c = citeproc.processCitationCluster(\n    {\n      citationID: key,\n      citationItems: entries,\n      properties:\n        mode === 'in-text'\n          ? { noteIndex: 0, mode: isComposite ? 'composite' : '' }\n          : { noteIndex: citationId, mode: isComposite ? 'composite' : '' },\n    },\n    citationPre.length > 0 ? citationPre : [],\n    []\n  )\n  // c = [ { bibchange: true, citation_errors: [] }, [ [ 0, '(1)', 'CITATION-1' ] ]]\n\n  const citationText = c[1].find((x) => x[2] === key)[1]\n  const ids = `citation--${entries.map((x) => x.id.toLowerCase()).join('--')}--${citationId}`\n  if (mode === 'note') {\n    // Use cite-fn-{id} to denote footnote from citation, will clean it up later to follow gfm \"user-content\" format\n    return [\n      citationText,\n      htmlToHast(\n        `<span class=\"${(inlineClass ?? []).join(\n          ' '\n        )}\" id=${ids}><sup><a href=\"#cite-fn-${citationId}\" id=\"cite-fnref-${citationId}\" data-footnote-ref aria-describedby=\"footnote-label\">${citationId}</a></sup></span>`\n      ),\n    ]\n  } else if (linkCitations && citationFormat === 'numeric') {\n    // e.g. [1, 2]\n    let i = 0\n    const refIds = entries.map((e) => e.id)\n    const output = citationText.replace(/\\d+/g, function (d) {\n      const url = `<a href=\"#bib-${refIds[i].toLowerCase()}\">${d}</a>`\n      i++\n      return url\n    })\n\n    return [\n      citationText,\n      htmlToHast(`<span class=\"${(inlineClass ?? []).join(' ')}\" id=${ids}>${output}</span>`),\n    ]\n  } else if (linkCitations && citationFormat === 'author-date') {\n    // E.g. (see Nash, 1950, pp. 12–13, 1951); (Nash, 1950; Xie, 2016)\n    if (entries.length === 1) {\n      // Do not link bracket\n      const output = isComposite\n        ? `<a href=\"#bib-${entries[0].id.toLowerCase()}\">${citationText}</a>`\n        : `(<a href=\"#bib-${entries[0].id.toLowerCase()}\">${citationText.slice(1, -1)}</a>)`\n      return [\n        citationText,\n        htmlToHast(`<span class=\"${(inlineClass ?? []).join(' ')}\" id=${ids}>${output}</span>`),\n      ]\n    } else {\n      // Retrieve the items in the correct order and attach link each of them\n      const refIds = entries.map((e) => e.id)\n      const results = getSortedRelevantRegistryItems(citeproc, refIds, citeproc.opt.sort_citations)\n      const output = []\n      let str = citationText\n\n      for (const [i, item] of results.entries()) {\n        // Need to compare author. If same just match on date.\n        const id = item.id\n        let citeMatch = item.ambig\n        // If author is the same as the previous, some styles like apa collapse the author\n        if (i > 0 && isSameAuthor(results[i - 1], item) && str.indexOf(citeMatch) === -1) {\n          // Just match on year\n          citeMatch = item.ref.issued.year.toString()\n        }\n        const startPos = str.indexOf(citeMatch)\n        const [start, rest] = split(str, startPos)\n        output.push(start) // Irrelevant parts\n        const url = `<a href=\"#bib-${id.toLowerCase()}\">${rest.substring(0, citeMatch.length)}</a>`\n        output.push(url)\n        str = rest.substr(citeMatch.length)\n      }\n      output.push(str)\n      return [\n        citationText,\n        htmlToHast(\n          `<span class=\"${(inlineClass ?? []).join(' ')}\" id=${ids}>${output.join('')}</span>`\n        ),\n      ]\n    }\n  } else {\n    return [\n      citationText,\n      htmlToHast(`<span class=\"${(inlineClass ?? []).join(' ')}\" id=${ids}>${citationText}</span>`),\n    ]\n  }\n}\n","import { htmlToHast } from './html-transform-node.js'\n\n/**\n * Generate bibliography in html and convert it to hast\n *\n * @param {*} citeproc\n */\nexport const genBiblioNode = (citeproc) => {\n  const [params, bibBody] = citeproc.makeBibliography()\n  const bibliography =\n    '<div id=\"refs\" class=\"references csl-bib-body\">\\n' + bibBody.join('') + '</div>'\n  const biblioNode = htmlToHast(bibliography)\n\n  // Add citekey id to each bibliography entry.\n  biblioNode.children\n    .filter((node) => node.properties?.className?.includes('csl-entry'))\n    .forEach((node, i) => {\n      const citekey = params.entry_ids[i][0].toLowerCase()\n      node.properties = node.properties || {}\n      node.properties.id = 'bib-' + citekey\n    })\n  return biblioNode\n}\n","/**\n * @typedef {import('hast').Element} Element\n */\n\nimport { htmlToHast } from './html-transform-node.js'\n\n/**\n * Create new footnote section node based on footnoteArray mappings\n *\n * @param {{int: string}} citationDict\n * @param {{type: 'citation' | 'existing', oldId: number}[]} footnoteArray\n * @param {Element | undefined} footnoteSection\n * @return {Element}\n */\nexport const genFootnoteSection = (citationDict, footnoteArray, footnoteSection) => {\n  /** @type {Element} */\n  const list = {\n    type: 'element',\n    tagName: 'ol',\n    children: [{ type: 'text', value: '\\n' }],\n  }\n  let oldFootnoteList\n  if (footnoteSection) {\n    oldFootnoteList = footnoteSection.children.find((n) => n.tagName === 'ol')\n  }\n  for (const [idx, item] of footnoteArray.entries()) {\n    const { type, oldId } = item\n    if (type === 'citation') {\n      list.children.push({\n        type: 'element',\n        tagName: 'li',\n        properties: { id: `user-content-fn-${idx + 1}` },\n        children: [\n          {\n            type: 'element',\n            tagName: 'p',\n            properties: {},\n            children: [\n              htmlToHast(`<span>${citationDict[oldId]}</span>`),\n              {\n                type: 'element',\n                tagName: 'a',\n                properties: {\n                  href: `#user-content-fnref-${idx + 1}`,\n                  dataFootnoteBackref: true,\n                  className: ['data-footnote-backref'],\n                  ariaLabel: 'Back to content',\n                },\n                children: [{ type: 'text', value: '↩' }],\n              },\n            ],\n          },\n          { type: 'text', value: '\\n' },\n        ],\n      })\n    } else if (type === 'existing') {\n      // @ts-ignore\n      const liNode = oldFootnoteList.children.find(\n        (n) => n.tagName === 'li' && n.properties.id === `user-content-fn-${oldId}`\n      )\n      liNode.properties.id = `user-content-fn-${idx + 1}`\n      const aNode = liNode.children[1].children.find((n) => n.tagName === 'a')\n      aNode.properties.href = `#user-content-fnref-${idx + 1}`\n      list.children.push(liNode)\n    }\n  }\n\n  /** @type {Element} */\n  const newfootnoteSection = {\n    type: 'element',\n    tagName: 'section',\n    properties: { dataFootnotes: true, className: ['footnotes'] },\n    children: [\n      {\n        type: 'element',\n        tagName: 'h2',\n        properties: { className: ['sr-only'], id: 'footnote-label' },\n        children: [{ type: 'text', value: 'Footnotes' }],\n      },\n      { type: 'text', value: '\\n' },\n      list,\n    ],\n  }\n  return newfootnoteSection\n}\n","//@ts-nocheck\n/**\n * @typedef {import('hast').Node} Node\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('unist-util-visit').Visitor<Node>} Visitor\n * @typedef {import('./types').CiteItem} CiteItem\n * @typedef {import('./types').Mode} Mode\n * @typedef {import('./types').Options} Options\n */\n\nimport { visit } from 'unist-util-visit'\nimport fetch from 'cross-fetch'\nimport { parseCitation } from './parse-citation.js'\nimport { genCitation } from './gen-citation.js'\nimport { genBiblioNode } from './gen-biblio.js'\nimport { genFootnoteSection } from './gen-footnote.js'\nimport { citationRE } from './regex.js'\nimport {\n  isNode,\n  isValidHttpUrl,\n  readFile,\n  getBibliography,\n  loadCSL,\n  loadLocale,\n  getCitationFormat,\n} from './utils.js'\n\nconst defaultCiteFormat = 'apa'\nconst permittedTags = ['div', 'p', 'span', 'li', 'td', 'th']\nconst idRoot = 'CITATION'\n\n/**\n * Rehype plugin that formats citations in markdown documents and insert bibliography in html format\n *\n *    [-@wadler1990]                              --> (1990)\n *    [@hughes1989, sec 3.4]                      --> (Hughes 1989, sec 3.4)\n *    [see @wadler1990; and @hughes1989, pp. 4]   --> (see Wadler 1990 and Hughes 1989, pp. 4)\n *\n * @param {*} Cite cite object from citation-js configured with the required CSLs\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypeCitationGenerator = (Cite) => {\n  return (options = {}) => {\n    return async (tree, file) => {\n      let bibliography = await getBibliography(options, file)\n      if (!bibliography) {\n        return\n      }\n\n      /** @type {string} */\n      let bibtexFile\n      /** @type {string} */ // @ts-ignore\n      const inputCiteformat = options.csl || file?.data?.frontmatter?.csl || defaultCiteFormat\n      const inputLang = options.lang || 'en-US'\n      const config = Cite.plugins.config.get('@csl')\n      const citeFormat = await loadCSL(Cite, inputCiteformat, options.path)\n      const lang = await loadLocale(Cite, inputLang, options.path)\n\n      if (isValidHttpUrl(bibliography)) {\n        isNode\n        const response = await fetch(bibliography)\n        bibtexFile = await response.text()\n      } else {\n        if (isNode) {\n          bibtexFile = await readFile(bibliography)\n        } else {\n          throw new Error(`Cannot read non valid bibliography URL in node env.`)\n        }\n      }\n\n      const citations = new Cite(bibtexFile)\n      const citationIds = citations.data.map((x) => x.id)\n      const citationPre = []\n      const citationDict = {}\n      let citationId = 1\n      const citeproc = config.engine(citations.data, citeFormat, lang, 'html')\n      /** @type {Mode} */\n      const mode = citeproc.opt.xclass\n      const citationFormat = getCitationFormat(citeproc)\n\n      visit(tree, 'text', (node, idx, parent) => {\n        const match = node.value.match(citationRE)\n        //@ts-ignore\n        if (!match || !permittedTags.includes(parent.tagName)) return\n        let citeStartIdx = match.index\n        let citeEndIdx = match.index + match[0].length\n        // If we have an in-text citation and we should suppress the author, the\n        // match.index does NOT include the positive lookbehind, so we have to manually\n        // shift \"from\" to one before.\n        if (match[2] !== undefined) {\n          citeStartIdx--\n        }\n        const newChildren = []\n        // if preceding string\n        if (citeStartIdx !== 0) {\n          // create a new child node\n          newChildren.push({\n            type: 'text',\n            value: node.value.slice(0, citeStartIdx),\n          })\n        }\n\n        const [entries, isComposite] = parseCitation(match)\n\n        // If id is not in citation file (e.g. route alias or js package), abort process\n        for (const citeItem of entries) {\n          if (!citationIds.includes(citeItem.id)) return\n        }\n        const [citedText, citedTextNode] = genCitation(\n          citeproc,\n          mode,\n          entries,\n          idRoot,\n          citationId,\n          citationPre,\n          options,\n          isComposite,\n          citationFormat\n        )\n        citationDict[citationId] = citedText\n\n        // Prepare citationPre and citationId for the next cite instance\n        citationPre.push([`${idRoot}-${citationId}`, 0])\n        citationId = citationId + 1\n\n        newChildren.push(citedTextNode)\n\n        // if trailing string\n        if (citeEndIdx < node.value.length) {\n          newChildren.push({\n            type: 'text',\n            value: node.value.slice(citeEndIdx),\n          })\n        }\n\n        // insert into the parent\n        // @ts-ignore\n        parent.children = [\n          ...parent.children.slice(0, idx),\n          ...newChildren,\n          ...parent.children.slice(idx + 1),\n        ]\n      })\n\n      if (options.noCite) {\n        citeproc.updateItems(options.noCite.map((x) => x.replace('@', '')))\n      }\n\n      if (\n        citeproc.registry.mylist.length >= 1 &&\n        (!options.suppressBibliography || options.inlineBibClass?.length > 0)\n      ) {\n        const biblioNode = genBiblioNode(citeproc)\n        let bilioInserted = false\n\n        const biblioMap = {}\n        biblioNode.children\n          .filter((node) => node.properties?.className?.includes('csl-entry'))\n          .forEach((node) => {\n            const citekey = node.properties.id.split('-').slice(1).join('-')\n            biblioMap[citekey] = { ...node }\n            biblioMap[citekey].properties = { id: 'inlinebib-' + citekey }\n          })\n\n        // Insert it at ^ref, if not found insert it as the last element of the tree\n        visit(tree, 'element', (node, idx, parent) => {\n          // Add inline bibliography\n          if (\n            options.inlineBibClass?.length > 0 &&\n            node.properties?.id?.toString().startsWith('citation-')\n          ) {\n            // id is citation--nash1951--nash1950--1\n            const [, ...citekeys] = node.properties.id.toString().split('--')\n            const citationID = citekeys.pop()\n\n            const inlineBibNode = {\n              type: 'element',\n              tagName: 'div',\n              properties: {\n                className: options.inlineBibClass,\n                id: `inlineBib--${citekeys.join('--')}--${citationID}`,\n              },\n              children: citekeys.map((citekey) => {\n                const aBibNode = biblioMap[citekey]\n                aBibNode.properties = {\n                  class: 'inline-entry',\n                  id: `inline--${citekey}--${citationID}`,\n                }\n                return aBibNode\n              }),\n            }\n            parent.children.push(inlineBibNode)\n          }\n\n          // Add bibliography\n          if (\n            !options.suppressBibliography &&\n            (node.tagName === 'p' || node.tagName === 'div') &&\n            node.children[0].value === '[^ref]'\n          ) {\n            parent.children[idx] = biblioNode\n            bilioInserted = true\n          }\n        })\n\n        if (!options.suppressBibliography && !bilioInserted) {\n          tree.children.push(biblioNode)\n        }\n      }\n\n      let footnoteSection\n      visit(tree, 'element', (node, index, parent) => {\n        if (node.tagName === 'section' && node.properties.dataFootnotes) {\n          footnoteSection = node\n          parent.children.splice(index, 1)\n        }\n      })\n\n      // Need to adjust footnote numbering based on existing ones already assigned\n      // And insert them into the footnote section (if exists)\n      // Footnote comes after bibliography\n      if (mode === 'note' && Object.keys(citationDict).length > 0) {\n        /** @type {{type: 'citation' | 'existing', oldId: number}[]} */\n        let fnArray = []\n        let index = 1\n        visit(tree, 'element', (node) => {\n          if (node.tagName === 'sup') {\n            let nextNode = node.children[0]\n            if (nextNode.tagName === 'a') {\n              // @ts-ignore\n              const { href, id } = nextNode.properties\n              if (href.includes('fn') && id.includes('fnref')) {\n                const oldId = href.split('-').pop()\n                fnArray.push({\n                  type: href.includes('cite') ? 'citation' : 'existing',\n                  oldId,\n                })\n                // Update ref number\n                // @ts-ignore\n                nextNode.properties.href = `#user-content-fn-${index}`\n                // @ts-ignore\n                nextNode.properties.id = `user-content-fnref-${index}`\n                nextNode.children[0].value = index.toString()\n                index += 1\n              }\n            }\n          }\n        })\n        // @ts-ignore\n        const newFootnoteSection = genFootnoteSection(citationDict, fnArray, footnoteSection)\n        tree.children.push(newFootnoteSection)\n      } else {\n        if (footnoteSection) tree.children.push(footnoteSection)\n      }\n    }\n  }\n}\n\nexport default rehypeCitationGenerator\n"],"names":["citationRE","fullCitationRE","locatorRE","locatorLabels","book","chapter","column","figure","folio","issue","line","note","opus","page","paragraph","part","section","verse","volume","parseCitation","regexMatch","entries","isComposite","fullCitation","inTextSuppressAuthor","inTextCitation","optionalSuffix","undefined","citationPart","split","match","exec","trim","thisCitation","id","groups","citekey","replace","prefix","locator","label","suffix","rawPrefix","endsWith","substring","length","explicitLocator","explicitLocatorInSuffix","rawSuffix","suffixToParse","containsLocator","parseSuffix","push","retValue","natural","toLowerCase","startsWith","substr","readFile","path","isValidHttpUrl","fetch","then","response","text","data","fs","readFileSync","str","url","URL","_","protocol","getBibliography","options","file","bibliography","frontmatter","join","cwd","loadCSL","Cite","format","root","config","plugins","get","Object","keys","templates","includes","cslName","Math","random","toString","slice","cslPath","add","err","Error","loadLocale","locales","localePath","xmlLangRe","localeName","getCitationFormat","citeproc","info","cslXml","dataObj","children","node","find","x","citationFormat","getSortedRelevantRegistryItems","relevantIds","sorted","res","item","registry","reflist","index","isSameAuthor","item2","authorList","ref","author","authorList2","i","family","htmlToHast","html","p5ast","parse5","parseFragment","fromParse5","genCitation","mode","citationIdRoot","citationId","citationPre","inlineClass","linkCitations","key","c","processCitationCluster","citationID","citationItems","properties","noteIndex","citationText","ids","map","refIds","e","output","d","results","opt","sort_citations","citeMatch","ambig","indexOf","issued","year","startPos","start","rest","genBiblioNode","params","bibBody","makeBibliography","biblioNode","filter","className","forEach","entry_ids","genFootnoteSection","citationDict","footnoteArray","footnoteSection","list","type","tagName","value","oldFootnoteList","n","idx","oldId","href","dataFootnoteBackref","ariaLabel","liNode","aNode","newfootnoteSection","dataFootnotes","defaultCiteFormat","permittedTags","idRoot","rehypeCitationGenerator","tree","bibtexFile","inputCiteformat","csl","inputLang","lang","citeFormat","citations","citationIds","engine","xclass","visit","parent","citeStartIdx","citeEndIdx","newChildren","citeItem","citedText","citedTextNode","noCite","updateItems","mylist","suppressBibliography","inlineBibClass","bilioInserted","biblioMap","citekeys","pop","inlineBibNode","aBibNode","class","splice","fnArray","nextNode","newFootnoteSection"],"mappings":"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"}